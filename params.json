{"name":"Wordpress-factory","tagline":"A Basic Boilerplate for a wordpress plugin factory framework","body":"wordpress-factory\r\n=================\r\n\r\n#Inspiration\r\nIts very hard for Object-Oriented Developers (Or Developers who uses MVC Frameworks) to develop wordpress plugins due to the difference on the framework and platform. So, i created this little bootstrap framework that would easily help developers to create their own plugin easily.\r\n\r\n##components added\r\n\t-Twig\r\n\t-Autoloader\r\n\t-probably eloquent? or a good schema builder\r\n\t-storage\r\n\t-base_path()\r\n\t-cache_path()\r\n\t-storage_path()\r\n\t-dd()\r\n\t-a well fixed documentation\r\n\r\n\r\n#Installation\r\nYou could easily install the plugin plainly. Each component requires a ```config.php```. Since this is a pre-beta plugin framework, there are a little bit of ```offf-issues```\r\n\r\n##File Structure\r\nThe File structure is composed of the ```Core``` class.\r\n\r\n\t-functions/classes/Core\r\n\t-functions/classes/Options\r\n\r\nEach class requires its own ```config.php``` that is found depending on its namespace. for example, ```\\Core\\Core``` has its ```config.php``` on ```config\\Core\\Core\\config.php```\r\n\r\n##Initialization\r\ninitialization or bootstrapping happened under ```functions.php``` and autoloads each objects with the use of ```CADBootstrap```.\r\n\r\n##Basic Example\r\n###Generating A View Component\r\nGenerating a Views Component is as easy as generating it in your own favorite frameworks. With the use of Twig Templating Engine, Wordpress Factory can generate a template easy as\r\n```php\r\necho \\Core\\ViewCore::make('options/options.tpl')->load();\r\n```\r\nThe Views folder houses all required fields\r\n###Queueing and Registering scripts\r\n```php\r\n\\Assets\\AdminAsset::load()->queue(); //for backend\r\n\\Assets\\FrontAsset::load()->queue(); //for Frontend\r\n```\r\n###With Config Php\r\n####Creating an Options Page\r\nThere is already an options page generated in ```functions\\classes\\Options\\Page\\OptionsPage```\r\n\r\n```php\r\n//notice that the optionspage already extended \\Core\\Core to have the generic requirements of the plugins page\r\n\r\npublic function init()\r\n{\r\n\tif(is_admin()) {\r\n\t\tself::factorize();\r\n\t}\r\n}\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}